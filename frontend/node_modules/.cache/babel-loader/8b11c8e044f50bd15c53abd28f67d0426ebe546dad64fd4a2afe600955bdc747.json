{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teema\\\\Downloads\\\\react-nodeJS\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport React from 'react';\nimport { json, redirect } from 'react-router-dom';\nimport EventForm from '../components/EventForm';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {\n      method: \"POST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport const action = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  //the request and params obj are passesd to the action by react router\n  //action method is fired when the form is submitted\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    description: data.get('description'),\n    date: data.get('date')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not post event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n};\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","json","redirect","EventForm","NewEventPage","action","request","params","data","formData","eventData","title","get","image","description","date","response","fetch","method","headers","body","JSON","stringify","status","ok","message"],"sources":["C:/Users/teema/Downloads/react-nodeJS/12-adv-starting-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import React from 'react'\r\nimport {json, redirect} from 'react-router-dom'\r\nimport EventForm from '../components/EventForm'\r\n\r\nconst NewEventPage = () => {\r\n  return (\r\n    <>\r\n    <EventForm method='POST'/>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewEventPage\r\nexport const action = async ({request,params})=>{\r\n  //the request and params obj are passesd to the action by react router\r\n  //action method is fired when the form is submitted\r\n  const data = await request.formData()\r\n  const eventData = {\r\n    title: data.get('title'),\r\n    image: data.get('image'),\r\n    description: data.get('description'),\r\n    date: data.get('date')\r\n  }\r\n  const response = await fetch('http://localhost:8080/events',{\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(eventData),\r\n  })\r\n\r\n  if(response.status === 422){\r\n    return response\r\n  }\r\n  if (!response.ok) {\r\n    throw json({message: 'Could not post event'},{status: 500})\r\n  }\r\n  return redirect('/events')\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,EAAEC,QAAQ,QAAO,kBAAkB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAAA;AAAA;AAE/C,MAAMC,YAAY,GAAG,MAAM;EACzB,oBACE;IAAA,uBACA,QAAC,SAAS;MAAC,MAAM,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA;EAAE,iBACzB;AAEL,CAAC;AAAA,KANKA,YAAY;AAQlB,eAAeA,YAAY;AAC3B,OAAO,MAAMC,MAAM,GAAG,cAA0B;EAAA,IAAnB;IAACC,OAAO;IAACC;EAAM,CAAC;EAC3C;EACA;EACA,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EACrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,WAAW,EAAEN,IAAI,CAACI,GAAG,CAAC,aAAa,CAAC;IACpCG,IAAI,EAAEP,IAAI,CAACI,GAAG,CAAC,MAAM;EACvB,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IAC1DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAGM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACzB,OAAOP,QAAQ;EACjB;EACA,IAAI,CAACA,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAE;IAAsB,CAAC,EAAC;MAACF,MAAM,EAAE;IAAG,CAAC,CAAC;EAC7D;EACA,OAAOrB,QAAQ,CAAC,SAAS,CAAC;AAC5B,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}