{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teema\\\\Downloads\\\\react-nodeJS\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {\n      method: \"POST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = NewEventPage;\nexport default NewEventPage;\n\n//repurpursed this to a reusable action for edit and add new event\n// export const action = async ({request,params})=>{\n//the request and params obj are passesd to the action by react router\n//action method is fired when the form is submitted\n//   let isId\n//   if(params.length > 0){\n//     isId = params.id\n//   }\n//   const data = await request.formData()\n//   const eventData = {\n//     title: data.get('title'),\n//     image: data.get('image'),\n//     description: data.get('description'),\n//     date: data.get('date')\n//   }\n//   const response = await fetch('http://localhost:8080/events',{\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(eventData),\n//   })\n\n//   if(response.status === 422){\n//     return response\n//   }\n//   if (!response.ok) {\n//     throw json({message: 'Could not post event'},{status: 500})\n//   }\n//   return redirect('/events')\n// }\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","NewEventPage"],"sources":["C:/Users/teema/Downloads/react-nodeJS/12-adv-starting-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import React from 'react'\r\nimport EventForm from '../components/EventForm'\r\n\r\nconst NewEventPage = () => {\r\n  return (\r\n    <>\r\n    <EventForm method='POST'/>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewEventPage\r\n\r\n//repurpursed this to a reusable action for edit and add new event\r\n// export const action = async ({request,params})=>{\r\n  //the request and params obj are passesd to the action by react router\r\n  //action method is fired when the form is submitted\r\n//   let isId\r\n//   if(params.length > 0){\r\n//     isId = params.id\r\n//   }\r\n//   const data = await request.formData()\r\n//   const eventData = {\r\n//     title: data.get('title'),\r\n//     image: data.get('image'),\r\n//     description: data.get('description'),\r\n//     date: data.get('date')\r\n//   }\r\n//   const response = await fetch('http://localhost:8080/events',{\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n//     body: JSON.stringify(eventData),\r\n//   })\r\n\r\n//   if(response.status === 422){\r\n//     return response\r\n//   }\r\n//   if (!response.ok) {\r\n//     throw json({message: 'Could not post event'},{status: 500})\r\n//   }\r\n//   return redirect('/events')\r\n// }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAA;AAAA;AAE/C,MAAMC,YAAY,GAAG,MAAM;EACzB,oBACE;IAAA,uBACA,QAAC,SAAS;MAAC,MAAM,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA;EAAE,iBACzB;AAEL,CAAC;AAAA,KANKA,YAAY;AAQlB,eAAeA,YAAY;;AAE3B;AACA;AACE;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}