{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teema\\\\Downloads\\\\react-nodeJS\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport MainNavigation from './components/MainNavigation';\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport EventDetailPage from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this),\n    children: [{\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events/:id\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","MainNavigation","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","App","router","path","element","children"],"sources":["C:/Users/teema/Downloads/react-nodeJS/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["import {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport MainNavigation from './components/MainNavigation'\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport EventDetailPage from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <MainNavigation/>,\n      children: [\n        {\n          path: \"\",\n          element: <p>Hello</p>,\n        },\n        {\n          path: \"events\",\n          element: <EventsPage/>,\n        },\n        {\n          path: \"events/:id\",\n          element: <EventDetailPage/>,\n        },\n      ]\n    },\n  ])\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA,SACEA,mBAAmB,EACnBC,cAAc,QACT,kBAAkB;AACzB,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EACb,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CACjC;IACEU,IAAI,EAAE,GAAG;IACTC,OAAO,eAAE,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAE;IAC1BC,QAAQ,EAAE,CACR;MACEF,IAAI,EAAE,EAAE;MACRC,OAAO,eAAE;QAAA,UAAG;MAAK;QAAA;QAAA;QAAA;MAAA;IACnB,CAAC,EACD;MACED,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAE,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA;IACtB,CAAC,EACD;MACED,IAAI,EAAE,YAAY;MAClBC,OAAO,eAAE,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA;IAC3B,CAAC;EAEL,CAAC,CACF,CAAC;EACF,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEF;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAtBQD,GAAG;AAwBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}