{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teema\\\\Downloads\\\\react-nodeJS\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useNavigation, useActionData, redirect, json } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { Form } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(_ref) {\n  _s();\n  let {\n    method,\n    event\n  } = _ref;\n  const navigate = useNavigate();\n  const data = useActionData(); //gives us access to the closest action\n\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  function cancelHandler() {\n    navigate('/events');\n  }\n  return (\n    /*#__PURE__*/\n    //wen using Form from react router dom, the form will be posted to your action method not the backend\n    //Form will automatically trigger the action function of the active route(the route for which the form was loaded)\n    _jsxDEV(Form, {\n      method: method,\n      className: classes.form,\n      children: [data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 46\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          name: \"title\",\n          required: true,\n          defaultValue: event ? event.title : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          type: \"url\",\n          name: \"image\",\n          required: true,\n          defaultValue: event ? event.image : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          name: \"date\",\n          required: true,\n          defaultValue: event ? event.date : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          rows: \"5\",\n          required: true,\n          defaultValue: event ? event.description : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cancelHandler,\n          disabled: isSubmitting,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Submitting' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(EventForm, \"lkj31A2CAttKPcPDT1ohetNewig=\", false, function () {\n  return [useNavigate, useActionData, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport const action = async _ref2 => {\n  let {\n    request,\n    params\n  } = _ref2;\n  //the request and params obj are passesd to the action by react router\n  //action method is fired when the form is submitted\n  let url = 'http://localhost:8080/events';\n  if (request.method === 'PATCH') {\n    url = `http://localhost:8080/events/${id}`;\n  }\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    description: data.get('description'),\n    date: data.get('date')\n  };\n  const response = await fetch(url, {\n    method: request.method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not post event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n};\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useNavigate","useNavigation","useActionData","redirect","json","classes","Form","EventForm","method","event","navigate","data","navigation","isSubmitting","state","cancelHandler","form","errors","Object","values","map","err","title","image","date","description","actions","action","request","params","url","id","formData","eventData","get","response","fetch","headers","body","JSON","stringify","status","ok","message"],"sources":["C:/Users/teema/Downloads/react-nodeJS/12-adv-starting-project/frontend/src/components/EventForm.js"],"sourcesContent":["import { useNavigate, useNavigation, useActionData,redirect,json } from 'react-router-dom';\n\nimport classes from './EventForm.module.css';\nimport {Form} from 'react-router-dom'\n\nfunction EventForm({ method, event }) {\n  const navigate = useNavigate();\n  const data = useActionData() //gives us access to the closest action\n\n  const navigation = useNavigation()\n  const isSubmitting = navigation.state === 'submitting'\n\n\n  function cancelHandler() {\n    navigate('/events');\n  }\n\n  return (\n    //wen using Form from react router dom, the form will be posted to your action method not the backend\n    //Form will automatically trigger the action function of the active route(the route for which the form was loaded)\n    <Form method={method} className={classes.form}>\n      {data && data.errors && <ul>\n        {Object.values(data.errors).map(err=><li key={err}>{err}</li>)}\n        \n        </ul>}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" required  defaultValue={event ? event.title :''}/>\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input id=\"image\" type=\"url\" name=\"image\" required defaultValue={event ? event.image :''}/>\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input id=\"date\" type=\"date\" name=\"date\" required defaultValue={event ? event.date :''}/>\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"5\" required defaultValue={event ? event.description :''}/>\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>{isSubmitting ? 'Submitting' : 'Save'}</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\nexport const action = async ({request,params})=>{\n  //the request and params obj are passesd to the action by react router\n  //action method is fired when the form is submitted\n  let url = 'http://localhost:8080/events'\n  if(request.method === 'PATCH'){\n    url = `http://localhost:8080/events/${id}`\n  }\n  const data = await request.formData()\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    description: data.get('description'),\n    date: data.get('date')\n  }\n  const response = await fetch(url,{\n    method: request.method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(eventData),\n  })\n\n  if(response.status === 422){\n    return response\n  }\n  if (!response.ok) {\n    throw json({message: 'Could not post event'},{status: 500})\n  }\n  return redirect('/events')\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}